{"version":3,"sources":["components/StateProvider.js","firebase.js","components/Header.js","components/Product.js","components/Home.js","components/reducer.js","components/Subtotal.js","components/CheckoutProduct.js","components/Checkout.js","components/Login.js","axios.js","components/Payment.js","components/Order.js","components/Orders.js","App.js","serviceWorker.js","index.js"],"names":["StateContext","createContext","StateProvider","reducer","initalState","children","Provider","value","useReducer","useStateValue","useContext","db","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firestore","auth","fb","Header","state","className","to","basket","length","href","onClick","toggleBtn","document","querySelector","navLinks","addEventListener","classList","toggle","remove","signOut","user","email","Product","id","title","img","price","rating","dispatch","Array","fill","map","_","i","src","alt","type","item","Home","initialState","getBasketTotal","reduce","amount","Subtotal","history","useHistory","renderText","decimalScale","displayType","thousandSeparator","prefix","e","push","CheckoutProduct","hideButton","Checkout","Login","useState","setEmail","pass","setPass","onChange","target","preventDefault","signInWithEmailAndPassword","then","catch","error","alert","message","createUserWithEmailAndPassword","console","log","instance","axios","create","baseURL","Payment","setError","disabled","setDisabled","processing","setProcessing","succeeded","setSucceeded","clientSecret","setClientSecret","stripe","useStripe","elements","useElements","useEffect","a","method","url","response","data","getSecret","handleSubmit","get","result","getMpesa","functions","httpsCallable","fire","confirmCardPayment","payment_method","card","getElement","CardElement","paymentIntent","collection","doc","uid","set","created","replace","onSubmit","empty","Order","order","moment","unix","format","Orders","orders","setOrders","orderBy","onSnapshot","snapshot","docs","promise","loadStripe","App","onAuthStateChanged","authUser","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","action","index","findIndex","basketItem","tempBasket","splice","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2196b8f1.chunk.js","sourcesContent":["import React, { createContext, useContext, useReducer } from 'react'\n\nexport const StateContext = createContext();\n\nexport const StateProvider = ({ reducer, initalState, children }) => (\n    <StateContext.Provider value={useReducer(reducer, initalState)}>\n        {children}\n    </StateContext.Provider>\n);\n\nexport const useStateValue = () => useContext(StateContext);\n","import firebase from 'firebase'\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyA0WFmOzyjAlts6uxRNlWW3dEjSBNnMJ3I\",\n    authDomain: \"whine-d6334.firebaseapp.com\",\n    databaseURL: \"https://whine-d6334.firebaseio.com\",\n    projectId: \"whine-d6334\",\n    storageBucket: \"whine-d6334.appspot.com\",\n    messagingSenderId: \"836085222407\",\n    appId: \"1:836085222407:web:65e0944ec9a9744bb12ea2\"\n  };\n\n  const firebaseApp = firebase.initializeApp(firebaseConfig);\n\n  const db =  firebaseApp.firestore();\n  const auth = firebase.auth();\n  const fb = firebase;\n\n  export { fb, db, auth };","import React, {useEffect} from 'react'\nimport SearchIcon from '@material-ui/icons/Search'\nimport ShoppingBasketIcon from '@material-ui/icons/ShoppingBasket'\nimport {Link} from 'react-router-dom'\nimport {useStateValue} from './StateProvider'\nimport {auth} from '../firebase'\nimport '../css/Header.css'\n\n\nexport const Header = () => {\n\n    const [ state ] = useStateValue();\n    \n    const handleAuth = () => {\n            auth.signOut();\n    }\n\n    const toggle = () => {\n        const toggleBtn = document.querySelector('.toggle-btn');\n        const navLinks = document.querySelector('.nav-links');\n\n        toggleBtn.addEventListener('click', () => {\n            navLinks.classList.toggle('active');\n        });\n\n        navLinks.addEventListener('click', () => {\n            navLinks.classList.remove('active');\n        });\n\n    }\n\n    return (\n        <div>\n                \n            <nav className='navbar'>\n                \n                <div className='nav-title'>\n                    <Link to='/'>\n                        Nyah-Giz\n                    </Link>\n                </div>\n            \n                <Link to='/checkout'>\n                   <div className='header-basket'>\n                        <ShoppingBasketIcon />\n                        <span className='header-basketCount'>\n                            {\n                                (state?.basket) ? (state?.basket.length) : 0\n                            }\n                        </span>\n                    </div> \n                </Link>\n\n                <a href='#' className='toggle-btn' onClick={toggle}>\n                    <span className='bar'></span>\n                    <span className='bar'></span>\n                    <span className='bar'></span>\n                </a>\n                <div className='nav-links'>\n                    <ul>\n                        <li onClick={handleAuth}><Link to={!(state?.user) && '/login'}> \n                                <span className='header-option1'>Hello {state?.user?.email}</span><br/>\n                                <span className='header-option2'>{state?.user ? 'Sign Out' : 'Sign In'}</span>\n                         </Link></li>\n                        <li><Link to='/orders'>\n                                <span className='header-option1'>Returns</span><br/>\n                                <span className='header-option2'>&amp; Orders</span>\n                            </Link></li>\n                        <li><Link to=''>\n                                <span className='header-option1'>Your</span><br/>\n                                <span className='header-option2'>Prime</span>\n                            </Link></li>\n                    </ul>\n                </div>\n\n                \n\n            </nav>\n        </div>\n    )\n    \n}\n","import React from 'react'\nimport {useStateValue} from './StateProvider'\nimport '../css/Product.css'\n\nexport const Product = ({id, title, img, price, rating}) => {\n\n    const [ state, dispatch] = useStateValue();\n\n    const addToBasket = () => {\n        dispatch({\n            type: 'ADD_TO_BASKET',\n            item: {\n                id:id,\n                title: title,\n                img: img,\n                price: price,\n                rating: rating\n            }\n        })\n    }\n\n    return (\n        <div className='product'>\n            <div className='product-info'>\n                <p>{title}</p>\n                <p className='product-price'>\n                    <small>Kshs.</small>\n                    <strong>{price}</strong>\n                </p>\n            </div>\n            <div className='product-rating'>\n                {Array(rating).fill().map((_, i) => (\n                  <p>⭐️</p>  \n                ))}\n                \n            </div>\n            <img src={img} alt='' />\n\n            <button onClick={addToBasket}>Add To Basket</button>\n        </div>\n    )\n}\n","import React from 'react'\nimport {Product} from './Product'\nimport '../css/Home.css'\n\nexport const Home = () => {\n    return (\n        <div className='home'>\n            <div className='home-cont'>\n                <img className='home-img' src='logo21.jpg' alt=''/>\n\n                <div className='home-row home-row1'>\n                    <Product\n                        id={1} \n                        title='konyagi 750ml'\n                        img='img/one.png'\n                        price={650}\n                        rating={5} />\n                    <Product \n                        id={2} \n                        title='konyagi 250ml'\n                        img='img/two.jpeg'\n                        price={220}\n                        rating={5} />\n                </div>\n\n                <div className='home-row'>\n                <Product \n                        id={3} \n                        title='smirnoff 750ml'\n                        img='img/three.jpeg'\n                        price={1500}\n                        rating={3} />\n                    <Product \n                        id={4} \n                        title='konyagi 750ml'\n                        img='img/one.png'\n                        price={650}\n                        rating={5} />\n                    <Product \n                        id={5} \n                        title='konyagi 750ml'\n                        img='img/one.png'\n                        price={650}\n                        rating={5} />\n                </div>\n\n                <div className='home-row'>\n                    <Product \n                        id={6} \n                        title='bombay 750ml'\n                        img='img/four.jpeg'\n                        price={2400}\n                        rating={4} />\n                </div>\n            </div>\n        </div>\n    )\n}\n","export const initialState = {\n    basket: [],\n    user: null\n};\n\n//Selector\nexport const getBasketTotal = (basket) => {\n    if(basket){\n        return basket.reduce((amount, item) => item.price + amount, 0);\n    } else {\n        return 0\n    }\n    \n}\n\nexport const reducer = (state = initialState, action) => {\n    switch(action.type){\n        case 'ADD_TO_BASKET':\n            return {\n                ...state,\n                basket: [...state.basket, action.item]\n            };\n\n        case 'REMOVE_FROM_BASKET':\n            const index = state.basket.findIndex(\n                (basketItem) => basketItem.id === action.id\n            );\n            let tempBasket = [...state.basket];\n\n            if (index >= 0) {\n                tempBasket.splice(index, 1);\n            } else {\n                alert('error in  removing item')\n            }\n\n            return {\n                ...state,\n                basket: tempBasket\n            }\n\n        case 'SET_USER':\n            return {\n                ...state,\n                user: action.user\n            };\n\n        case 'EMPTY_BASKET':\n            return {\n                ...state, \n                basket: []\n            }\n\n\n        default:\n            return state;\n    }\n}","import React from 'react'\nimport CurrencyFormat from 'react-currency-format'\nimport {useStateValue} from './StateProvider'\nimport {getBasketTotal} from './reducer';\nimport {useHistory} from 'react-router-dom';\n\nexport const Subtotal = () => {\n\n    const [ state ] = useStateValue();\n    const history = useHistory();\n\n    return (\n        <div className='subtotal'>\n            <CurrencyFormat \n                renderText={(value) => (\n                    <p>\n                        SubTotal  { state?.basket.length } items : \n                        <strong> {value}</strong>\n                    </p>                            \n                )}\n                decimalScale={2}\n                value={getBasketTotal(state?.basket)}\n                displayType={'text'}\n                thousandSeparator={true}\n                prefix={'Kshs '}\n            />\n            <button\n            onClick={e => history.push('/payment')} >\n                Proceed to Pay\n            </button>\n        </div>\n    )\n}\n","import React from 'react'\nimport {useStateValue} from './StateProvider'\nimport '../css/CheckoutProduct.css'\n\nexport const CheckoutProduct = ({ id, img, title, price, rating, hideButton }) => {\n\n    const [ basket, dispatch ] = useStateValue();\n\n    const removeFromBasket = () => {\n        dispatch({\n            type: 'REMOVE_FROM_BASKET',\n            id: id\n        });\n    } \n\n    return (\n        <div className='checkout-product'>\n            <img src={img} alt='' className='checkout-product-img' />\n\n            <div className='checkout-product-info'>\n                <p className='checkout-product-title'>\n                    {title}\n                    </p> \n                <p className='checkout-product-price'>\n                    <small>Kshs </small>\n                    <strong>{price}</strong>\n                    </p> \n                <p className='checkout-product-rating'>\n                    {Array(rating).fill().map((_, i) => (\n                    <p>⭐️</p>  \n                    ))}\n                    </p> \n                    {!hideButton && (\n                       <button onClick={removeFromBasket}>Remove</button> \n                    )}\n            </div>\n            \n        </div>\n    )\n}\n","import React from 'react'\nimport {Subtotal} from './Subtotal'\nimport {useStateValue} from './StateProvider'\nimport {CheckoutProduct} from './CheckoutProduct';\nimport '../css/Checkout.css'\n\nexport const Checkout = () => {\n\n    const [ state ] = useStateValue();\n\n    return (\n        <div className='checkout'>\n            \n            <div className='checkout-left'>\n                <div className='checkout-title'>\n                    <h3>Hello {state?.user?.email}</h3>\n                    <h1>Shopping Basket</h1>\n                </div>\n                {\n                    state?.basket.map(item => (\n                        <CheckoutProduct \n                            id={item.id}\n                            title={item.title}\n                            img={item.img}\n                            price={item.price}\n                            rating={item.rating}\n                        />\n                    ))\n                }\n            </div>\n\n            <div className='checkout-right'>\n                <Subtotal />\n            </div>\n        </div>\n    )\n}\n","import React, {useState} from 'react'\nimport {Link, useHistory } from 'react-router-dom'\nimport { auth } from '../firebase'\n\n\nexport const Login = () => {\n\n    const history = useHistory();\n    const [email, setEmail] = useState('');\n    const [pass, setPass] = useState('');\n\n\n    const signIn = e => {\n        e.preventDefault();\n        auth.signInWithEmailAndPassword(email, pass).then(\n            (auth) => {\n                history.push('/');\n            }\n        ).catch(error => \n            alert(error.message)\n        )\n    }\n\n    const register = e => {\n        e.preventDefault();\n        auth.createUserWithEmailAndPassword(email, pass).then(\n            (auth) => {\n                console.log(auth);\n                if (auth) {\n                    history.push('/')\n                }\n            }\n        ).catch((error) => {\n            console.log(error.message)\n        });\n\n    }\n\n    return (\n        <div className='login'>\n            <Link to='/'>\n                <img  src='logo3.png' alt='' className='login-logo' />\n            </Link>\n\n            <div className='login-cont'>\n                <h1>Sign In</h1>\n\n                <form className='login-form'>\n                    <h5>E-mail</h5>\n                    <input type='email' value={email} \n                    onChange={(e) => {setEmail(e.target.value)}}\n                    />\n\n                    <h5>Password</h5>\n                    <input type='password' value={pass} \n                    onChange={(e) => {setPass(e.target.value)}}\n                    />\n\n                    <button type='submit' onClick={signIn} className='login-signin'>Sign-In</button>\n                </form>\n                <p>By signing in you agree to this websites terms and conditions</p>\n        <br/>\n\n                <p>Don't have an account?</p>\n                <button onClick={register} className='login-register'>Create Account</button>\n            </div>\n            \n        </div>\n    )\n}\n","import axios from 'axios'\n\nconst instance = axios.create({\n    baseURL: 'https://us-central1-whine-d6334.cloudfunctions.net/'\n    // 'http://localhost:5001/whine-d6334/us-central1/api'\n});\n\nexport default instance;","import React, {useState, useEffect} from 'react'\nimport {useStateValue} from './StateProvider'\nimport {CheckoutProduct} from './CheckoutProduct';\nimport { Link, useHistory } from 'react-router-dom';\nimport {useElements, useStripe, CardElement} from '@stripe/react-stripe-js';\nimport CurrencyFormat from 'react-currency-format'\nimport {getBasketTotal} from './reducer';\nimport axios from '../axios'\nimport {fb, db} from '../firebase';\nimport '../css/Payment.css'\n\nexport const Payment = () => {\n\n    const [ state, dispatch ] = useStateValue();\n    const history = useHistory();\n    \n    const [ error, setError ] = useState();\n    const [ disabled, setDisabled ] = useState();\n    const [ processing, setProcessing ] = useState();\n    const [ succeeded, setSucceeded ] = useState();\n    const [ clientSecret, setClientSecret ] = useState();\n\n    const stripe = useStripe();\n    const elements = useElements();\n\n    useEffect(() => {\n        const getSecret = async () => {\n            const response = await axios({\n                method: 'post',\n                url: `/payments/create?total=${getBasketTotal(state?.basket)}`\n            });\n            setClientSecret(response.data.clientSecret);\n        }\n        getSecret();\n\n\n    }, [state?.basket]);\n\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        setProcessing(true);\n\n        const getMpesa = async () => {\n            await axios.get(`/mpesa/stk?total=${getBasketTotal(state?.basket)}`).then(result => {\n                console.log(result);\n            });\n        }\n        getMpesa();\n\n        let fire = fb.functions().httpsCallable('mpesa1');\n        fire().then(result => {\n            console.log(result.data)\n        });\n\n    const payload = await stripe.confirmCardPayment(clientSecret, {\n        payment_method: {\n            card: elements.getElement(CardElement)\n        }\n    }).then(({ paymentIntent }) => {\n\n        db.collection('users').doc(state?.user?.uid).collection('orders').doc(paymentIntent.id).set({\n            basket: state.basket,\n            amount: paymentIntent.amount,\n            created: paymentIntent.created,\n        })\n\n        setSucceeded(true);\n        setError(null);\n        setProcessing(false);\n\n        dispatch({\n            type: 'EMPTY_BASKET'\n        });\n\n        history.replace('/orders')\n    })\n    }\n\n    const handleChange = (e) => {\n        setDisabled(e.empty);\n        setError(e.error ? e.error.message : '');\n    }\n\n    return (\n        <div className='payment'>\n            <div className='payment-cont'>\n\n                <h1>Checkout (<Link to='/checkout'>{state?.basket.length} items</Link>) </h1>\n\n                <div className='payment-section'>\n                    <div className='payment-title'>\n                        <h3>Delivery address</h3>\n                    </div>\n                    <div className='payment-address'>\n                        <p>{state?.user?.email}</p>\n                        <p>South B</p>\n                        <p>Balozi</p>\n                    </div>\n                </div>\n\n                <div className='payment-section'>\n                    <div className='payment-title'>\n                        <h3>Review items in Basket</h3>\n                    </div>\n                    <div className='payment-items'>\n                        {state?.basket.map((item) => (\n                            <CheckoutProduct \n                            id={item.id}\n                            title={item.title}\n                            img={item.img}\n                            price={item.price}\n                            rating={item.rating}\n                        />\n                        ))}\n                    </div>\n                </div>\n\n                <div className='payment-section'>\n                    <div className='payment-title'>\n                        <h3>Payment Method</h3>\n                    </div>\n                    <div className='payment-details'>\n                        <form onSubmit={handleSubmit}>\n                            <CardElement onChange={handleChange} />\n                            <div className='payment-priceCont'>\n                                <CurrencyFormat \n                                    renderText={(value) => (\n                                        <>\n                                        <h3>Order Total: {value}</h3>\n                                        </>\n                                    )}\n                                    decimalScale={2}\n                                    value={getBasketTotal(state?.basket)}\n                                    displayType={'text'}\n                                    thousandSeparator={true}\n                                    prefix={'Kshs '}\n                                />\n                                <button disabled={processing || disabled || succeeded}>\n                                        <span>\n                                            {processing ? <p>Processing</p> : 'Buy Now'}\n                                        </span>\n                                </button>\n                            </div>\n                            {error && <div>{error}</div>}\n                        </form>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n","import React from 'react'\nimport moment from 'moment'\nimport {CheckoutProduct} from './CheckoutProduct'\nimport CurrencyFormat from 'react-currency-format'\n\nexport const Order = ({ order }) => {\n    return (\n        <div className='order'> \n            <h2>Order</h2>\n            <p>{moment.unix(order.data.created).format('MMMM Do YYYY h:mma')}</p>\n\n            <p className='order-id'>\n                <small>{order.id}</small>\n            </p>\n            \n            {order.data.basket?.map(item => (\n                <CheckoutProduct \n                    id={item.id}\n                    title={item.title}\n                    img={item.img}\n                    price={item.price}\n                    rating={item.rating}\n                    hideButton\n                />\n            ))}\n            <CurrencyFormat \n            renderText={(value) => (\n                <h3>Order Total: {value}</h3>\n            )}\n            decimalScale={2}\n            thousandSeparator={true}\n            displayType={'text'}\n            prefix={'Kshs '}\n            value={order.data.amount}\n            />\n\n        </div>\n    )\n}\n","import React, {useState, useEffect} from 'react'\nimport {db} from '../firebase';\nimport {useStateValue} from './StateProvider';\nimport {Order} from './Order';\n\nexport const Orders = () => {\n\n    const [ state ] = useStateValue();\n    const [ orders, setOrders ] = useState([]);\n\n    useEffect(() => {\n        if(state?.user) {\n          db.collection('users').doc(state?.user?.uid).collection('orders').orderBy('created', 'desc').onSnapshot(snapshot => {\n                setOrders(snapshot.docs.map((doc) => ({\n                    id: doc.id,\n                    data: doc.data(),\n                })));\n            })  \n        } else {\n            setOrders([]);\n        }\n    }, [state?.user]);\n\n    return (\n        <div className='orders'>\n            <h1>Your Orders</h1>\n\n            <div className='orders-order'>\n                {orders?.map(order => (\n                    <Order order={order} />\n                ))}\n            </div>\n        </div>\n    )\n}\n","import React, {useEffect} from 'react';\nimport { Header } from './components/Header';\nimport {Home} from './components/Home';\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom';\nimport {Checkout} from './components/Checkout';\nimport {Login} from './components/Login';\nimport {Payment} from './components/Payment';\nimport { auth } from './firebase'\nimport {useStateValue} from './components/StateProvider';\nimport { loadStripe } from '@stripe/stripe-js'\nimport { Elements } from '@stripe/react-stripe-js'\nimport {Orders} from './components/Orders';\n\nconst promise = loadStripe('pk_test_51HUnLGGfr6l7l1UbaI9Or5c0qmW9Ff6YlPW79sPdVqIzkfpfP1v28ElJ91GzXoSypVZhu1dbt14tbuNUFQH2SZ5000DRVzmMMJ');\n\nfunction App() {\n\n  const [ state, dispatch ] = useStateValue();\n\n  useEffect(() => {\n        \n    auth.onAuthStateChanged(authUser => {\n        if(authUser) {\n            dispatch({\n                type: 'SET_USER',\n                user: authUser\n            })} else {\n                dispatch({\n                    type: 'SET_USER',\n                    user: null\n                });\n                } \n        });\n    }, []);\n\n  return (\n    <Router>\n      <div className=\"App\">\n        \n        <Switch>\n          <Route exact path='/'>\n            <Header />\n            <Home />\n          </Route>\n\n          <Route path='/checkout'>\n            <Header />\n            <Checkout />\n          </Route>\n\n          <Route path='/orders'>\n            <Header />\n            <Orders />\n          </Route>\n\n          <Route path='/payment'>\n            <Header />\n            <Elements stripe={promise}>\n              <Payment />\n            </Elements>\n          </Route>\n\n          <Route path='/login'>\n            <Login />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n    \n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {StateProvider} from './components/StateProvider'\nimport {initialState} from './components/reducer'\nimport {reducer} from './components/reducer'\n\nReactDOM.render(\n  <React.StrictMode>\n    <StateProvider initialState={initialState} reducer={reducer}>\n      <App />\n    </StateProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}